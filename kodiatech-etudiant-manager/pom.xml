<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <!-- identifier le parent -->

    <parent>
        <groupId>com.kodiatech.learn</groupId>
        <artifactId>kodiatech-learn</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>


    <!-- identifier fils   -->


    <artifactId>kodiatech-etudiant-manager</artifactId>
    <!-- PACKAGING  ear, war, jar   -->
    <name>kodiatech-etudiant-manager</name>
    <description>Demo project for Spring Boot</description>


    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <!--  sonarqub found in setting.xm file-->

        <!--        <sonar.projectKey>${sonar.projectKey}</sonar.projectKey>-->
        <!--        <sonar.host.url>${sonar.host.url}</sonar.host.url>-->
        <!--        <sonar.login>${sonar.login}</sonar.login>-->

        <!-- Chemin du rapport de couverture JaCoCo -->
        <!--        <sonar.jacoco.reportPaths>target/jacoco.exec</sonar.jacoco.reportPaths>-->
    </properties>
    <dependencies>
        <!-- -**************************COMMUN ***************************- -->
        <dependency>
            <groupId>com.kodiatech.learn</groupId>
            <artifactId>kodiateck-commun</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!--  *************************-EXISTAN***************- -->
        <!-- PostgreSQL Driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!--- DOCKER  il demande d'etre  -->
        <!--        <dependency>-->
        <!--            <groupId>org.springframework.boot</groupId>-->
        <!--            <artifactId>spring-boot-docker-compose</artifactId>-->
        <!--            <optional>true</optional>-->
        <!--        </dependency>-->
        <!--- End to DOCKER -->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>
        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Plugin JaCoCo pour générer les rapports de couverture de code -->
            <!--            <plugin>-->
            <!--                <groupId>org.jacoco</groupId>-->
            <!--                <artifactId>jacoco-maven-plugin</artifactId>-->
            <!--                <version>0.8.7</version> &lt;!&ndash; Vérifiez la dernière version &ndash;&gt;-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <goals>-->
            <!--                            <goal>prepare-agent</goal> &lt;!&ndash; Prépare l'agent JaCoCo pendant les tests &ndash;&gt;-->
            <!--                            <goal>report</goal> &lt;!&ndash; Générez le rapport de couverture &ndash;&gt;-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->


            <!-- sonarqube -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.9.1.2184</version>
            </plugin>

        </plugins>
    </build>

</project>
